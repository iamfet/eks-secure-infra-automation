name: Terraform Destroy

on:
  workflow_dispatch:  # Manual trigger from GitHub UI
    inputs:
      confirm_destroy:
        description: 'Type "destroy" to confirm infrastructure destruction'
        required: true

permissions:
  id-token: write
  contents: read

env:
  TF_LOG: INFO
  AWS_REGION: us-east-1

jobs:
  terraform-destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm_destroy == 'destroy'
    environment: dev
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.0

      - name: Terraform Init
        run: |
          # Initialize with remote backend
          terraform init

      - name: Release state lock
        run: terraform force-unlock -force e96be9ce-b18c-b3ed-fc43-0d0e2d3d78cc
        continue-on-error: true

      - name: Remove ArgoCD applications
        run: |
          CLUSTER_NAME=$(terraform output -raw cluster_name 2>/dev/null || echo "ama-shop-eks-cluster")
          aws eks update-kubeconfig --name $CLUSTER_NAME --region ${{ env.AWS_REGION }}
          kubectl delete applications.argoproj.io --all -n argocd || true
          kubectl delete appprojects.argoproj.io --all -n argocd || true
        continue-on-error: true

      - name: Terraform Destroy
        run: |
          terraform destroy \
            -var="user_for_admin_role=${{ secrets.ADMIN_USER_ARN }}" \
            -var="user_for_dev_role=${{ secrets.DEV_USER_ARN }}" \
            -var="gitops_url=${{ secrets.GITOPS_URL }}" \
            -var="gitops_username=${{ secrets.GITOPS_USERNAME }}" \
            -var="gitops_password=${{ secrets.GITOPS_PASSWORD_TOKEN }}" \
            -auto-approve
            
      - name: Clean up backend
        run: |
          cd backend
          terraform init
          terraform destroy -auto-approve